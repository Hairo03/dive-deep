// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dive_deep.Data;

#nullable disable

namespace dive_deep.Migrations
{
    [DbContext(typeof(DiveDeepContext))]
    [Migration("20250912151346_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PackageId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("PackageProduct");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            PackageId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            PackageId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            PackageId = 2,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("dive_deep.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Komplet Dykkersæt",
                            PricePerDay = 900.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Snorkelsæt",
                            PricePerDay = 300.0
                        });
                });

            modelBuilder.Entity("dive_deep.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thickness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Scubapro",
                            CategoryType = 0,
                            Gender = "Unisex",
                            Name = "Navigator Lite BCD",
                            PricePerDay = 125.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Scubapro",
                            CategoryType = 0,
                            Gender = "Unisex",
                            Name = "BCD Glide",
                            PricePerDay = 100.0,
                            Size = "S",
                            Thickness = "4mm"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Scubapro",
                            CategoryType = 2,
                            Gender = "Unisex",
                            Name = "Definition",
                            PricePerDay = 100.0,
                            Size = "L",
                            Thickness = "5mm"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Scubapro",
                            CategoryType = 6,
                            Gender = "Unisex",
                            Name = "5 liter tank",
                            PricePerDay = 150.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Subapro",
                            CategoryType = 1,
                            Gender = "Unisex",
                            Name = "MK25EVO",
                            PricePerDay = 125.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Scubapro",
                            CategoryType = 2,
                            Gender = "Unisex",
                            Name = "Ghost",
                            PricePerDay = 50.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Seac",
                            CategoryType = 3,
                            Gender = "Unisex",
                            Name = "ALA",
                            PricePerDay = 50.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Cressi",
                            CategoryType = 4,
                            Gender = "Unisex",
                            Name = "F1",
                            PricePerDay = 50.0,
                            Size = "M",
                            Thickness = "2mm"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Cressi",
                            CategoryType = 5,
                            Gender = "Unisex",
                            Name = "Snorkel",
                            PricePerDay = 25.0,
                            Size = "M",
                            Thickness = "2mm"
                        });
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.HasOne("dive_deep.Models.Package", null)
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PackageProduct_Package_PackageId");

                    b.HasOne("dive_deep.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PackageProduct_Product_ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
